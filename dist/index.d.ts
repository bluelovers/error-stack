// Generated by dts-bundle-generator v5.9.0

import { ITSPickExtra } from 'ts-type/lib/type/record';

export interface Source {
	source: string;
	line?: number;
	col?: number;
}
export interface Trace extends Source {
	callee: string;
	calleeNote?: string;
	eval?: boolean;
	evalTrace: Source;
}
export declare function breakBrackets(str: string, first: string, last: string): string[];
export declare function parseSource(rawSource: string): {
	source: string;
	line: string;
	col: string;
};
export declare function parseEvalSource(rawEvalSource: string): {
	source: string;
	line: number;
	col: number;
	evalTrace: {
		source: string;
		line: string;
		col: string;
	};
};
export declare function parseTrace(trace: string, testEvalSource?: boolean): Trace;
export declare function parse(stack: string): {
	type: string;
	message: string;
	traces: Trace[];
};
export declare function formatTrace({ callee, calleeNote, source, line, col, }: ITSPickExtra<Trace, "source">): string;
export declare function formatEvalTrace({ callee, evalTrace, ...trace }: Trace): string;
export declare function formatMessage({ type, message, }: {
	type: string;
	message: string;
}): string;
export declare class ErrorStack {
	type: string;
	message: string;
	traces: Trace[];
	constructor(stack: string);
	filter(filter: (value: Trace, index: number, array: Trace[]) => boolean): this;
	format(): string;
}
export declare function parseErrorStack(stack: string): ErrorStack;
export default parseErrorStack;

export {};
